### Test script to resolve foreign key constraint issue

### 1. First, let's check if the chat service is running
GET http://localhost:8080/health

### 2. Create the first user (user1)
POST http://localhost:8080/api/v1/users/
Content-Type: application/json

{
  "id": "50b46bfd-de84-4289-bf64-4606cbcd204d",
  "email": "user1@example.com",
  "password": "password123",
  "firstName": "John",
  "lastName": "Doe",
  "countryCode": "+1",
  "phoneNumber": "1234567890",
  "role": "buyer",
  "status": "active"
}

### 3. Create the second user (user2)
POST http://localhost:8080/api/v1/users/
Content-Type: application/json

{
  "id": "4146072f-d75a-4ec9-baf1-a4b86577f470",
  "email": "user2@example.com",
  "password": "password123",
  "firstName": "Jane",
  "lastName": "Smith",
  "countryCode": "+1",
  "phoneNumber": "0987654321",
  "role": "developer",
  "status": "active"
}

### 4. Verify users were created
GET http://localhost:8080/api/v1/users/

### 5. Now create the conversation (this should work now)
POST http://localhost:8080/api/v1/chat/conversations
Content-Type: application/json

{
  "user1Id": "50b46bfd-de84-4289-bf64-4606cbcd204d",
  "user2Id": "4146072f-d75a-4ec9-baf1-a4b86577f470"
}

### 6. Send a test message
POST http://localhost:8080/api/v1/chat/messages
Content-Type: application/json

{
  "conversationId": "{{conversation_id}}",
  "senderId": "50b46bfd-de84-4289-bf64-4606cbcd204d",
  "content": "Hello! This is a test message.",
  "messageType": "text"
} 